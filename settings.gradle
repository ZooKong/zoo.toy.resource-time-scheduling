rootProject.name = 'resource-scheduling'

include 'resource-scheduling-app-portal'
include 'resource-scheduling-domain'
include 'resource-scheduling-support'


/*
TODO : 아래의 답변을 참고하여 모듈 설계를 진행해보자.
모듈 설계와 관련된 chatbot 답변

[질문]
너가 만약 신규로 프로젝트를 구성한다면 어떤 모듈들로 구성할거야?

[답변]
만약 신규로 프로젝트를 구성한다면, 다음과 같은 모듈들로 구성할 수 있을 것입니다.
core 모듈: 프로젝트의 핵심 비즈니스 로직이나 공통적인 기능들을 담당하는 모듈입니다. 프로젝트의 핵심 도메인 모델, 비즈니스 로직, 예외 처리, 유틸리티 클래스 등이 이 모듈에 구현될 수 있습니다.
domain 모듈: 프로젝트의 도메인 모델을 정의하고 구현하는 모듈입니다. 도메인 모델은 프로젝트의 핵심 비즈니스 개념을 표현하며, 데이터 모델링, 엔티티 클래스, 값 객체, 리포지토리 인터페이스 등이 이 모듈에 구현될 수 있습니다.
data 모듈: 프로젝트의 데이터 액세스와 관련된 기능들을 담당하는 모듈입니다. 데이터베이스 연동, 데이터 액세스 로직, 쿼리 실행, ORM(Object-Relational Mapping) 등이 이 모듈에 구현될 수 있습니다. 이 모듈은 core 모듈과 domain 모듈을 사용하여 데이터를 영속화하는 역할을 수행합니다.
web 모듈: 프로젝트의 웹 관련 기능들을 담당하는 모듈입니다. 웹 컨트롤러, REST API, 웹 서비스, 웹 보안, 인증, 인가 등이 이 모듈에 구현될 수 있습니다. 이 모듈은 core 모듈과 domain 모듈의 기능을 외부에 노출하여 웹 인터페이스를 통해 사용자와 상호작용하는 역할을 수행합니다.
support 모듈: 프로젝트의 공통적인 지원 기능들을 담당하는 모듈입니다. 예를 들어, 로깅, 설정 관리, 예외 처리, 보안 설정, 인증 및 인가 처리, 캐싱, 메시징, 이메일 발송 등의 기능이 이 모듈에 구현될 수 있습니다.
위와 같이 모듈을 구성하면, 각 모듈은 명확한 책임을 가지고 개발될 수 있으며, 코드의 재사용성, 유지보수성, 확장성을 향상시킬 수 있습니다. 또한, 모듈 간의 의존성을 관리하여 개발과 테스트, 배포를 더욱 효율적으로 진행할 수 있습니다.

[질문]
방금 설명한 모듈들의 의존 관계는 어떻게 되는거야?

[답변]
위에서 언급한 모듈들 간의 의존 관계는 다음과 같이 될 수 있습니다.
core 모듈: 다른 모든 모듈들에 의존하지 않고, 핵심 비즈니스 로직과 공통 기능을 구현합니다.
domain 모듈: core 모듈에 의존하며, core 모듈에서 정의한 핵심 비즈니스 로직을 구현하고, 데이터 모델링에 필요한 엔티티 클래스와 값 객체를 제공합니다. 또한, data 모듈과 함께 데이터 액세스를 위한 리포지토리 인터페이스를 정의하고 구현합니다.
data 모듈: core 모듈과 domain 모듈에 의존하며, 데이터베이스와의 연동, 데이터 액세스 로직, ORM 등을 구현합니다. domain 모듈에서 정의한 도메인 모델의 데이터를 영속화하고, 데이터 액세스 관련 기능을 제공합니다.
web 모듈: core 모듈과 domain 모듈에 의존하며, 웹 관련 기능인 컨트롤러, REST API, 웹 서비스, 웹 보안, 인증, 인가 등을 구현합니다. domain 모듈에서 정의한 도메인 모델을 사용하여 웹 인터페이스를 통해 사용자와 상호작용하는 기능을 제공합니다.
support 모듈: 다른 모든 모듈들에 의존하여 공통적인 지원 기능인 로깅, 설정 관리, 예외 처리, 보안 설정, 인증 및 인가 처리, 캐싱, 메시징, 이메일 발송 등을 구현합니다. 다른 모듈들에서 공통으로 사용되는 기능들을 제공하고, 필요한 경우 다른 모듈들에서 해당 기능을 활용합니다.
이렇게 모듈 간의 의존 관계를 잘 관리하면, 모듈들 간의 결합도를 낮추고, 응집도를 높여서 코드의 재사용성, 유지보수성, 확장성을 향상시킬 수 있습니다. 또한, 각 모듈의 책임과 범위를 명확하게 정의하여 개발, 테스트, 배포를 더욱 효율적으로 진행할 수 있습니다.
 */